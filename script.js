function analyzeResume() {
    const input = document.getElementById('resumeInput');
    const file = input.files[0];

    if (!file || !file.name.endsWith('.pdf')) {
        alert('Please upload a valid PDF file.');
        return;
    }

    document.getElementById('loading').style.display = 'block';
    document.getElementById('result').innerHTML = '';

    const reader = new FileReader();
    reader.onload = function () {
        const typedArray = new Uint8Array(this.result);

        pdfjsLib.getDocument(typedArray).promise.then(pdf => {
            let pagePromises = [];
            for (let i = 1; i <= pdf.numPages; i++) {
                pagePromises.push(
                    pdf.getPage(i).then(page =>
                        page.getTextContent().then(content =>
                            content.items.map(item => item.str).join(' ')
                        )
                    )
                );
            }

            Promise.all(pagePromises).then(pagesText => {
                const fullText = pagesText.join(' ').toLowerCase();
                processResumeText(fullText);
            });
        }).catch(err => {
            document.getElementById('loading').style.display = 'none';
            alert('Error reading PDF: ' + err.message);
        });
    };

    reader.readAsArrayBuffer(file);
}

function processResumeText(text) {
    const wordCount = text.split(/\s+/).filter(Boolean).length;
    const emailMatches = text.match(/[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-z]{2,}/g);
    const email = emailMatches ? emailMatches.join(', ') : 'Not found';

    const skills = [
        'html', 'css', 'javascript', 'react', 'node', 'python', 'java',
        'sql', 'bootstrap', 'mongodb', 'typescript', 'express', 'django'
    ];
    const foundSkills = skills.filter(skill => text.includes(skill));

    const resultHTML = `
        <h4 class="text-success">Analysis Result:</h4>
        <p><strong style="color: #3f51b5;">üìù Total Words:</strong> 
            <span style="color: #ff5722;">${wordCount}</span></p>
        <p><strong style="color: #3f51b5;">‚úâ Email Found:</strong> 
            <span style="color: #009688;">${email}</span></p>
        <p><strong style="color: #3f51b5;">üíª Skills Detected:</strong> 
            <span style="color: #4caf50;">${foundSkills.length ? foundSkills.join(', ') : 'None'}</span></p>
        <button class="btn btn-outline-primary" onclick="downloadReport('${wordCount}', '${email}', '${foundSkills.join(', ')}')">Download Report</button>
    `;

    document.getElementById('loading').style.display = 'none';
    document.getElementById('result').innerHTML = resultHTML;
}

function downloadReport(wordCount, email, skills) {
    const htmlContent = `
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Resume Report</title>
    <style>
        body {
            font-family: 'Segoe UI', sans-serif;
            background: linear-gradient(to right, #e1f5fe, #fce4ec);
            padding: 40px;
            color: #333;
        }
        h1 {
            text-align: center;
            color: #7e57c2;
            text-decoration: underline;
        }
        .section {
            background-color: #fff8e1;
            margin: 20px auto;
            padding: 20px;
            border-left: 6px solid #4fc3f7;
            border-radius: 10px;
            max-width: 700px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }
        .label {
            font-size: 1.2em;
            color: #673ab7;
            margin-bottom: 10px;
        }
        .value {
            font-weight: bold;
            font-size: 1.3em;
            color: #ff5722;
        }
        footer {
            text-align: center;
            margin-top: 40px;
            font-size: 0.9em;
            color: #888;
        }
    </style>
</head>
<body>
    <h1>Resume Analysis Report</h1>

    <div class="section">
        <div class="label">üìù Total Words:</div>
        <div class="value">${wordCount}</div>
    </div>

    <div class="section">
        <div class="label">‚úâ Email Found:</div>
        <div class="value">${email}</div>
    </div>

    <div class="section">
        <div class="label">üíª Skills Detected:</div>
        <div class="value">${skills || 'None'}</div>
    </div>

    <footer>Generated by Resume Analyzer</footer>
</body>
</html>
`;

    const blob = new Blob([htmlContent], { type: 'text/html' });
    const link = document.createElement('a');
    link.href = URL.createObjectURL(blob);
    link.download = 'resume_report.html';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
}